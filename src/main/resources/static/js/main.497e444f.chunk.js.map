{"version":3,"sources":["Config.js","Queue.js","hash.js","TextBox.js","Player.js","SpotHouse.js","App.js","reportWebVitals.js","index.js"],"names":["scopes","Queue","props","updateSongValue","toSend","increased","target","className","axios","post","headers","then","response","catch","error","console","log","songQueue","id","border","table-layour","bordercolor","map","item","align","type","name","value","onClick","src","artwork","width","style","fontSize","padding","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","TextBox","textInput","useRef","useState","textInp","setText","useEffect","current","force","label","onChange","e","event","handleChange","Player","progressBarStyles","progress_ms","duration_ms","album","images","url","artists","SpotHouse","updateBackendQueue","orderedList","newQueue","i","state","currentQueue","length","push","songs","data","songName","j","setState","addToSpotifyQueue","token","toAdd","encodeURIComponent","uri","trim","$","beforeSend","xhr","setRequestHeader","success","shift","added","scrollToBottom","endPage","scrollIntoView","behavior","is_playing","no_data","no_top_data","searchQuery","searchResults","artist","clickedSongURI","topTracks","count","getCurrentlyPlaying","bind","tick","param","this","_token","access_token","getTopTracks","interval","setInterval","clearInterval","prevProps","prevState","searchQueryParameter","tracks","items","a","clickedArtist","currentTarget","textContent","clickedName","clickedURI","clickedArt","joined","concat","href","join","changeQuery","height","visibility","onPress","getSearch","class","clickResult","display","float","clear","ref","el","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.497e444f.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\nexport const clientId = \"41b5d9c762d04b6182549771690cf81c\";\nexport const redirectUri = \"https://spothouse-app.herokuapp.com/callback\";\nexport const scopes = [\n    \"user-top-read\",\n    \"user-read-currently-playing\",\n    \"user-read-playback-state\",\n    \"user-modify-playback-state\",\n];","import React, {useState, useEffect, useRef} from 'react';\nimport axios from 'axios';\n\nconst Queue = props => {\n\n    const updateSongValue = (props) => {\n        let songName = props.target.className\n        const toSend = {\n            increased: songName\n        }\n        let config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n        axios.post(\n            \"http://localhost:4567/rankings\",\n            toSend,\n            config\n        )\n            .then(response => {\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    return (\n        <div className=\"App\"><center>\n            <h2>Queue</h2>\n            <br></br>\n            {props.songQueue[0] && (\n                <table id=\"table\" className=\"table\" border=\"1px\" table-layour=\"fixed\" bordercolor=\"black\">\n                    <tbody>\n                    {props.songQueue.map(item =>\n                        <tr>\n                            <td align=\"center\"><input type=\"button\" className={item.name} value=\"Upvote\" onClick={updateSongValue}/></td>\n                            <td align=\"center\"><img src={item.artwork} width=\"50\" align=\"center\"/></td>\n                            <td align=\"center\" style={{fontSize: 13, padding: 10}}>{item.name}</td>\n                        </tr>\n                    )\n                    }\n                    </tbody>\n                </table>\n            )}\n        </center>\n            <br></br>\n        </div>\n    );\n}\n\nexport default Queue;","// Get the hash of the url\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\nexport default hash;","import React, {useEffect, useRef, useState} from 'react';\nimport './App.css';\nimport './App.js';\n\n/**\n * A functional component representing a TextBox\n * @param props = the inputted props from the parent\n * @return the TextBox element\n */\nfunction TextBox(props) {\n    const textInput = useRef(0);\n    const [textInp, setText] = useState(0);\n    const [searchQuery, setSearch] = useState(\"\")\n\n    /**\n     * handleChange.\n     * Changes our variables information on the box to the user text\n     * @param props = the inputted props from the parent\n     * @param event = the text of the user\n     */\n    function handleChange(props, event) {\n        props.onChange(event.target.value)\n    }\n\n    /**\n     * useEffect (for nearest clicking).\n     * Forcibly changes the text of the box to the user click\n     */\n    useEffect(() => {\n        textInput.current = props.force\n        setText(props.force)\n    }, [props.force]);\n\n  return (\n    <div className=\"TextBox\">\n      <div>{props.label}</div>\n      <input \n        type={'text'}\n        value={textInp}\n        onChange={(e) => handleChange(props, e)}\n      />\n    </div>\n  );\n}\n\nexport default TextBox;\n","import React from \"react\";\nimport \"./Player.css\";\n\nconst Player = props => {\n\n  const progressBarStyles = {\n    width: (props.progress_ms * 100 / props.item.duration_ms) + '%'\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"main-wrapper\">\n        <div className=\"now-playing__img\">\n          <img src={props.item.album.images[0].url} />\n        </div>\n        <div className=\"now-playing__side\">\n          <div className=\"now-playing__name\">{props.item.name}</div>\n          <div className=\"now-playing__artist\">\n            {props.item.artists[0].name}\n          </div>\n          <div className=\"progress\">\n            <div className=\"progress__bar\" style={progressBarStyles} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Player;","import React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./Config\";\nimport { AwesomeButton } from \"react-awesome-button\";\nimport Queue from \"./Queue\"\nimport hash from \"./hash\";\nimport \"./App.css\";\nimport TextBox from './TextBox';\nimport Player from './Player';\nimport axios from \"axios\";\n\n\nclass SpotHouse extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{ url: \"\" }]\n        },\n        name: \"\",\n        artists: [{ name: \"\" }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0,\n      no_data: false,\n      no_top_data: false,\n      searchQuery: \"\",\n      searchResults: [\n        {\n          name: \"\",\n          artist: \"\",\n          uri: \"\",\n          artwork: \"\",\n        }\n      ],\n      clickedSongURI: \"\",\n      currentQueue: [],\n      topTracks: [],\n      count: 0,\n      added: false\n    };\n\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n    this.tick = this.tick.bind(this);\n  }\n\n  changeQuery(param) {\n    this.setState({ searchQuery: param })\n    console.log(param)\n  }\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n      this.getTopTracks(_token);\n      this.getCurrentlyPlaying(_token);\n    }\n\n    // set interval for polling every .5 seconds\n    this.interval = setInterval(() => this.tick(), 500);\n  }\n\n  componentWillUnmount() {\n    // clear the interval to save resources\n    clearInterval(this.interval);\n  }\n\n  tick() {\n    if(this.state.token) {\n      this.getCurrentlyPlaying(this.state.token);\n      this.updateBackendQueue();\n      if (this.state.progress_ms/this.state.item.duration_ms > .95 & !this.state.added) {\n        if (this.state.currentQueue.length > 0)\n          this.addToSpotifyQueue(this.state.token);\n      }\n    }\n  }\n  \n  updateBackendQueue = () => {\n    let current = []\n    let orderedList = []\n    let newQueue = []\n    for (let i = 0; i < this.state.currentQueue.length; i++) {\n        let name = this.state.currentQueue[i].name\n        current.push(name)\n    }\n      const toSend = {\n          songs: current\n      }\n      let config = {\n          headers: {\n              \"Content-Type\": \"application/json\",\n              'Access-Control-Allow-Origin': '*',\n          }\n      }\n      axios.post(\n          \"http://localhost:4567/queue\",\n          toSend,\n          config\n      )\n          .then(response => {\n              // console.log(\"THIS IS THE BACKEND QUEUE\", response)\n              orderedList = response.data[\"songList\"]\n              for (let i = 0; i < orderedList.length; i++) {\n                  let songName = orderedList[i].name\n                  for (let j = 0; j < this.state.currentQueue.length; j++) {\n                      if (this.state.currentQueue[j].name === songName) {\n                          newQueue.push(this.state.currentQueue[j])\n                      }\n                  }\n              }\n              this.setState({currentQueue: newQueue})\n          })\n          .catch(function (error) {\n              console.log(error);\n          });\n  }\n\n  addToSpotifyQueue = (token) => {\n    let toAdd = encodeURIComponent(this.state.currentQueue[0].uri.trim()) \n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player/queue?uri=\" + toAdd,\n      type: \"POST\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        this.state.currentQueue.shift();\n        this.setState({added: true})\n      }\n    });\n  }\n  scrollToBottom = () => {\n    this.endPage.scrollIntoView({ behavior: \"smooth\" });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.count !== this.state.count)\n      this.scrollToBottom();\n    if (prevState.item.name !== this.state.item.name)\n      this.setState({added: false})\n  }\n  getSearch(token, searchQuery) {\n    // parse searchQuery\n    let searchQueryParameter = encodeURIComponent(searchQuery.trim()) \n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/search?q=\" + searchQueryParameter + \"&type=track\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        //console.log(data)\n        // Checks if the data is not empty\n        if(data) {\n          console.log(data)\n          this.setState({\n            searchResults: data.tracks.items.map((item) => ({\n              name: item.name,\n              artist: item.artists[0].name,\n              uri: item.uri,\n              artwork: item.album.images[0].url\n            }\n          )\n          )});\n          console.log(this.state.searchResults)\n          return;\n        }\n\n        this.setState({\n          item: data.item,\n        });\n      }\n    });\n\n  }\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        // Checks if the data is not empty\n        if(!data) {\n          this.setState({\n            no_data: true,\n          });\n          return;\n        }\n\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms,\n          no_data: false /* We need to \"reset\" the boolean, in case the\n                            user does not give F5 and has opened his Spotify. */\n        });\n      }\n    });\n  }\n  \n  getTopTracks(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/top/tracks?time_range=short_term&limit=20\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        // Checks if the data is not empty\n        if(!data) {\n          this.setState({\n            no_top_data: true,\n          });\n          return;\n        }\n        this.setState({\n          topTracks: data.items.map((item) => ({\n            name: item.name,\n            artist: item.artists[0].name,\n            uri: item.uri,\n            artwork: item.album.images[0].url\n          }\n          ))\n        });\n        console.log(this.state.topTracks)\n      }\n    });\n  }\n\n  async clickResult(e) {\n    let clickedArtist = e.currentTarget.textContent.split(\" -, \")[0]\n    let clickedName = e.currentTarget.textContent.split(\" -, \")[1]\n    let clickedURI = e.currentTarget.textContent.split(\" -, \")[2]\n    let clickedArt = e.currentTarget.textContent.split(\" -, \")[3]\n    await this.setState({clickedSongURI: clickedURI})\n    var joined = this.state.currentQueue.concat({name: clickedName,\n      artist: clickedArtist,\n      artwork: clickedArt,\n      uri: clickedURI});\n    await this.setState({currentQueue: joined})\n                            \n    this.setState({count: this.state.count + 1})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {!this.state.token && (\n            <a\n              className=\"btn btn--loginApp-link\"\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                \"%20\"\n              )}&response_type=token&show_dialog=true`}\n            >\n              Login to Spotify\n            </a>\n          )}\n          {this.state.token && (\n            <>\n            <TextBox label=\"Search for a song:\" force={this.state.searchQuery} onChange={this.changeQuery.bind(this)}/>\n            <hr style={{height:10, visibility:\"hidden\"}} />\n            <AwesomeButton type=\"primary\" className=\"btn btn--search\" onPress={() => {\n                this.getSearch(this.state.token, this.state.searchQuery)\n            }}>Submit</AwesomeButton>\n            <br></br>\n            <p style={{fontSize:\"small\"}}>Click on a song to add it to the queue!</p>\n            <br></br>\n            <div class=\"row\">\n              <div class=\"column\">\n                {this.state.token && !this.state.no_top_data && (\n                  <>     \n                  <h4>Your top tracks:</h4>\n                  <br></br>\n                    {this.state.topTracks.map(item => <p className=\"search\" onClick={item => this.clickResult(item)}>\n                      {item.artist} -<span style={{display: \"none\"}}>,</span> {item.name}<div style={{display: \"none\"}}> -, {item.uri} -, {item.artwork}</div></p>)}\n                  <br></br>\n                  </>\n                )}\n              </div>\n              <div class=\"column\">\n                <hr width=\"300\" style={{visibility:\"hidden\"}}/>\n                {this.state.searchResults[0].name && (\n                  <>\n                  <h4>Search results:</h4>\n                  <br></br>\n                  {this.state.searchResults.map(item => <p className=\"search\" onClick={item => this.clickResult(item)}>\n                    {item.artist} -<span style={{display: \"none\"}}>,</span> {item.name}<div style={{display: \"none\"}}> -, {item.uri} -, {item.artwork}</div></p>)} \n                  </>\n                )}\n\n              </div>\n            </div>\n            </>\n          )}    \n        </header>\n        <br></br>\n        {this.state.token && !this.state.no_data && this.state.item && (\n            <>\n            <Player\n              item={this.state.item}\n              is_playing={this.state.is_playing}\n              progress_ms={this.state.progress_ms}\n            />\n            \n            <Queue \n              songQueue = {this.state.currentQueue}\n              />\n            <br></br>\n            </>\n          )}\n          {this.state.no_data && (\n            <>     \n            \n            <Queue \n              songQueue = {this.state.currentQueue}\n              />\n            <br></br>\n              \n            </>\n          )}\n          <div style={{ float:\"left\", clear: \"both\" }}\n               ref={(el) => { this.endPage = el; }}>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default SpotHouse;","import React, { Component } from 'react';\nimport './App.css';\nimport SpotHouse from './SpotHouse.js';\n\n/**\n * Main component, for the website and logo.\n */\nclass App extends Component {\n    render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h2>SpotHouse!</h2>\n        </div>\n        <div>\n            <SpotHouse/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}