{"version":3,"sources":["Config.js","Queue.js","hash.js","TextBox.js","Player.js","SpotHouse.js","App.js","reportWebVitals.js","index.js"],"names":["scopes","Queue","props","currentQueue","i","songQueue","length","name","push","useRef","updateSongValue","toSend","increased","target","className","axios","post","headers","then","response","catch","error","console","log","id","border","table-layour","bordercolor","map","item","align","type","value","onClick","src","artwork","width","style","fontSize","padding","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","TextBox","textInput","useState","textInp","setText","useEffect","current","force","label","onChange","e","event","handleChange","Player","progressBarStyles","progress_ms","duration_ms","album","images","url","artists","SpotHouse","updateBackendQueue","orderedList","newQueue","state","songs","data","songName","j","setState","updateQueue","token","toAdd","encodeURIComponent","uri","trim","$","beforeSend","xhr","setRequestHeader","success","shift","added","scrollToBottom","endPage","scrollIntoView","behavior","is_playing","no_data","no_top_data","searchQuery","searchResults","artist","clickedSongURI","topTracks","count","getCurrentlyPlaying","bind","tick","param","this","_token","access_token","getTopTracks","interval","setInterval","clearInterval","prevProps","prevState","searchQueryParameter","tracks","items","a","clickedArtist","currentTarget","textContent","clickedName","clickedURI","clickedArt","joined","concat","href","join","changeQuery","height","visibility","onPress","getSearch","class","clickResult","display","float","clear","ref","el","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71caae9c.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\nexport const clientId = \"41b5d9c762d04b6182549771690cf81c\";\r\nexport const redirectUri = \"http://localhost:3000/callback\";\r\nexport const scopes = [\r\n    \"user-top-read\",\r\n    \"user-read-currently-playing\",\r\n    \"user-read-playback-state\",\r\n    \"user-modify-playback-state\",\r\n];","import React, {useState, useEffect, useRef} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Queue = props => {\r\n    let currentQueue = []\r\n    let orderedList = []\r\n    for (let i = 0; i < props.songQueue.length; i++) {\r\n        let name = props.songQueue[i].name\r\n        currentQueue.push(name)\r\n    }\r\n    let tempQueue = props.songQueue\r\n    const newQueue = useRef([])\r\n\r\n    const updateSongValue = (props) => {\r\n        let songName = props.target.className\r\n        const toSend = {\r\n            increased: songName\r\n        }\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Access-Control-Allow-Origin': '*',\r\n            }\r\n        }\r\n        axios.post(\r\n            \"http://localhost:4567/rankings\",\r\n            toSend,\r\n            config\r\n        )\r\n            .then(response => {\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    // console.log(\"Current Queue\", currentQueue)\r\n    return (\r\n        <div className=\"App\"><center>\r\n            <h2>Queue</h2>\r\n            <br></br>\r\n            {props.songQueue[0] && (\r\n                <table id=\"table\" className=\"table\" border=\"1px\" table-layour=\"fixed\" bordercolor=\"black\">\r\n                    <tbody>\r\n                    {props.songQueue.map(item =>\r\n                        <tr>\r\n                            <td align=\"center\"><input type=\"button\" className={item.name} value=\"Upvote\" onClick={updateSongValue}/></td>\r\n                            <td align=\"center\"><img src={item.artwork} width=\"50\" align=\"center\"/></td>\r\n                            <td align=\"center\" style={{fontSize: 13, padding: 10}}>{item.name}</td>\r\n                        </tr>\r\n                    )\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </center>\r\n            <br></br>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Queue;","// Get the hash of the url\r\nconst hash = window.location.hash\r\n  .substring(1)\r\n  .split(\"&\")\r\n  .reduce(function(initial, item) {\r\n    if (item) {\r\n      var parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n    }\r\n    return initial;\r\n  }, {});\r\nwindow.location.hash = \"\";\r\n\r\nexport default hash;","import React, {useEffect, useRef, useState} from 'react';\r\nimport './App.css';\r\nimport './App.js';\r\n\r\n/**\r\n * A functional component representing a TextBox\r\n * @param props = the inputted props from the parent\r\n * @return the TextBox element\r\n */\r\nfunction TextBox(props) {\r\n    const textInput = useRef(0);\r\n    const [textInp, setText] = useState(0);\r\n    const [searchQuery, setSearch] = useState(\"\")\r\n\r\n    /**\r\n     * handleChange.\r\n     * Changes our variables information on the box to the user text\r\n     * @param props = the inputted props from the parent\r\n     * @param event = the text of the user\r\n     */\r\n    function handleChange(props, event) {\r\n        props.onChange(event.target.value)\r\n    }\r\n\r\n    /**\r\n     * useEffect (for nearest clicking).\r\n     * Forcibly changes the text of the box to the user click\r\n     */\r\n    useEffect(() => {\r\n        textInput.current = props.force\r\n        setText(props.force)\r\n    }, [props.force]);\r\n\r\n  return (\r\n    <div className=\"TextBox\">\r\n      <div>{props.label}</div>\r\n      <input \r\n        type={'text'}\r\n        value={textInp}\r\n        onChange={(e) => handleChange(props, e)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextBox;\r\n","import React from \"react\";\r\nimport \"./Player.css\";\r\n\r\nconst Player = props => {\r\n\r\n  const progressBarStyles = {\r\n    width: (props.progress_ms * 100 / props.item.duration_ms) + '%'\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"main-wrapper\">\r\n        <div className=\"now-playing__img\">\r\n          <img src={props.item.album.images[0].url} />\r\n        </div>\r\n        <div className=\"now-playing__side\">\r\n          <div className=\"now-playing__name\">{props.item.name}</div>\r\n          <div className=\"now-playing__artist\">\r\n            {props.item.artists[0].name}\r\n          </div>\r\n          <div className=\"progress\">\r\n            <div className=\"progress__bar\" style={progressBarStyles} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;","import React, { Component } from \"react\";\r\nimport * as $ from \"jquery\";\r\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./Config\";\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport Queue from \"./Queue\"\r\nimport hash from \"./hash\";\r\nimport \"./App.css\";\r\nimport TextBox from './TextBox';\r\nimport Player from './Player';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass SpotHouse extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      token: null,\r\n      item: {\r\n        album: {\r\n          images: [{ url: \"\" }]\r\n        },\r\n        name: \"\",\r\n        artists: [{ name: \"\" }],\r\n        duration_ms: 0\r\n      },\r\n      is_playing: \"Paused\",\r\n      progress_ms: 0,\r\n      no_data: false,\r\n      no_top_data: false,\r\n      searchQuery: \"\",\r\n      searchResults: [\r\n        {\r\n          name: \"\",\r\n          artist: \"\",\r\n          uri: \"\",\r\n          artwork: \"\",\r\n        }\r\n      ],\r\n      clickedSongURI: \"\",\r\n      currentQueue: [],\r\n      topTracks: [],\r\n      count: 0,\r\n      added: false\r\n    };\r\n\r\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\r\n    this.tick = this.tick.bind(this);\r\n  }\r\n\r\n  changeQuery(param) {\r\n    this.setState({ searchQuery: param })\r\n    console.log(param)\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Set token\r\n    let _token = hash.access_token;\r\n\r\n    if (_token) {\r\n      // Set token\r\n      this.setState({\r\n        token: _token\r\n      });\r\n      this.getTopTracks(_token);\r\n      this.getCurrentlyPlaying(_token);\r\n    }\r\n\r\n    // set interval for polling every .5 seconds\r\n    this.interval = setInterval(() => this.tick(), 500);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // clear the interval to save resources\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  tick() {\r\n    if(this.state.token) {\r\n      this.getCurrentlyPlaying(this.state.token);\r\n      this.updateBackendQueue();\r\n      console.log(this.state)\r\n      if (this.state.progress_ms/this.state.item.duration_ms > .95 & !this.state.added) {\r\n        if (this.state.currentQueue.length > 0)\r\n          this.updateQueue(this.state.token);\r\n      }\r\n    }\r\n  }\r\n  \r\n  updateBackendQueue = () => {\r\n    let current = []\r\n    let orderedList = []\r\n    let newQueue = []\r\n    for (let i = 0; i < this.state.currentQueue.length; i++) {\r\n        let name = this.state.currentQueue[i].name\r\n        current.push(name)\r\n    }\r\n      const toSend = {\r\n          songs: current\r\n      }\r\n      let config = {\r\n          headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              'Access-Control-Allow-Origin': '*',\r\n          }\r\n      }\r\n      axios.post(\r\n          \"http://localhost:4567/queue\",\r\n          toSend,\r\n          config\r\n      )\r\n          .then(response => {\r\n              // console.log(\"THIS IS THE BACKEND QUEUE\", response)\r\n              orderedList = response.data[\"songList\"]\r\n              for (let i = 0; i < orderedList.length; i++) {\r\n                  let songName = orderedList[i].name\r\n                  for (let j = 0; j < this.state.currentQueue.length; j++) {\r\n                      if (this.state.currentQueue[j].name === songName) {\r\n                          newQueue.push(this.state.currentQueue[j])\r\n                      }\r\n                  }\r\n              }\r\n              this.setState({currentQueue: newQueue})\r\n          })\r\n          .catch(function (error) {\r\n              console.log(error);\r\n          });\r\n  }\r\n\r\n  updateQueue = (token) => {\r\n    let toAdd = encodeURIComponent(this.state.currentQueue[0].uri.trim()) \r\n    // Make a call using the token\r\n    $.ajax({\r\n      url: \"https://api.spotify.com/v1/me/player/queue?uri=\" + toAdd,\r\n      type: \"POST\",\r\n      beforeSend: xhr => {\r\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\r\n      },\r\n      success: data => {\r\n        this.state.currentQueue.shift();\r\n        this.state.added = true\r\n      }\r\n    });\r\n  }\r\n  scrollToBottom = () => {\r\n    this.endPage.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.count !== this.state.count)\r\n      this.scrollToBottom();\r\n    if (prevState.item.name != this.state.item.name)\r\n      this.state.added = false\r\n  }\r\n  getSearch(token, searchQuery) {\r\n    // parse searchQuery\r\n    let searchQueryParameter = encodeURIComponent(searchQuery.trim()) \r\n    // Make a call using the token\r\n    $.ajax({\r\n      url: \"https://api.spotify.com/v1/search?q=\" + searchQueryParameter + \"&type=track\",\r\n      type: \"GET\",\r\n      beforeSend: xhr => {\r\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\r\n      },\r\n      success: data => {\r\n        //console.log(data)\r\n        // Checks if the data is not empty\r\n        if(data) {\r\n          console.log(data)\r\n          this.setState({\r\n            searchResults: data.tracks.items.map((item) => ({\r\n              name: item.name,\r\n              artist: item.artists[0].name,\r\n              uri: item.uri,\r\n              artwork: item.album.images[0].url\r\n            }\r\n          )\r\n          )});\r\n          console.log(this.state.searchResults)\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          item: data.item,\r\n        });\r\n      }\r\n    });\r\n\r\n  }\r\n  getCurrentlyPlaying(token) {\r\n    // Make a call using the token\r\n    $.ajax({\r\n      url: \"https://api.spotify.com/v1/me/player\",\r\n      type: \"GET\",\r\n      beforeSend: xhr => {\r\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\r\n      },\r\n      success: data => {\r\n        // Checks if the data is not empty\r\n        if(!data) {\r\n          this.setState({\r\n            no_data: true,\r\n          });\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          item: data.item,\r\n          is_playing: data.is_playing,\r\n          progress_ms: data.progress_ms,\r\n          no_data: false /* We need to \"reset\" the boolean, in case the\r\n                            user does not give F5 and has opened his Spotify. */\r\n        });\r\n      }\r\n    });\r\n  }\r\n  \r\n  getTopTracks(token) {\r\n    // Make a call using the token\r\n    $.ajax({\r\n      url: \"https://api.spotify.com/v1/me/top/tracks?time_range=short_term&limit=20\",\r\n      type: \"GET\",\r\n      beforeSend: xhr => {\r\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\r\n      },\r\n      success: data => {\r\n        // Checks if the data is not empty\r\n        if(!data) {\r\n          this.setState({\r\n            no_top_data: true,\r\n          });\r\n          return;\r\n        }\r\n        this.setState({\r\n          topTracks: data.items.map((item) => ({\r\n            name: item.name,\r\n            artist: item.artists[0].name,\r\n            uri: item.uri,\r\n            artwork: item.album.images[0].url\r\n          }\r\n          ))\r\n        });\r\n        console.log(this.state.topTracks)\r\n      }\r\n    });\r\n  }\r\n\r\n  async clickResult(e) {\r\n    let clickedArtist = e.currentTarget.textContent.split(\" -, \")[0]\r\n    let clickedName = e.currentTarget.textContent.split(\" -, \")[1]\r\n    let clickedURI = e.currentTarget.textContent.split(\" -, \")[2]\r\n    let clickedArt = e.currentTarget.textContent.split(\" -, \")[3]\r\n    await this.setState({clickedSongURI: clickedURI})\r\n    var joined = this.state.currentQueue.concat({name: clickedName,\r\n      artist: clickedArtist,\r\n      artwork: clickedArt,\r\n      uri: clickedURI});\r\n    await this.setState({currentQueue: joined})\r\n                            \r\n    this.setState({count: this.state.count + 1})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          {!this.state.token && (\r\n            <a\r\n              className=\"btn btn--loginApp-link\"\r\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n                \"%20\"\r\n              )}&response_type=token&show_dialog=true`}\r\n            >\r\n              Login to Spotify\r\n            </a>\r\n          )}\r\n          {this.state.token && (\r\n            <>\r\n            <TextBox label=\"Search for a song:\" force={this.state.searchQuery} onChange={this.changeQuery.bind(this)}/>\r\n            <hr style={{height:10, visibility:\"hidden\"}} />\r\n            <AwesomeButton type=\"primary\" className=\"btn btn--search\" onPress={() => {\r\n                this.getSearch(this.state.token, this.state.searchQuery)\r\n            }}>Submit</AwesomeButton>\r\n            <br></br>\r\n            <p style={{fontSize:\"small\"}}>Click on a song to add it to the queue!</p>\r\n            <br></br>\r\n            <div class=\"row\">\r\n              <div class=\"column\">\r\n                {this.state.token && !this.state.no_top_data && (\r\n                  <>     \r\n                  <h4>Your top tracks:</h4>\r\n                  <br></br>\r\n                    {this.state.topTracks.map(item => <p className=\"search\" onClick={item => this.clickResult(item)}>\r\n                      {item.artist} -<span style={{display: \"none\"}}>,</span> {item.name}<div style={{display: \"none\"}}> -, {item.uri} -, {item.artwork}</div></p>)}\r\n                  <br></br>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div class=\"column\">\r\n                <hr width=\"300\" style={{visibility:\"hidden\"}}/>\r\n                {this.state.searchResults[0].name && (\r\n                  <>\r\n                  <h4>Search results:</h4>\r\n                  <br></br>\r\n                  {this.state.searchResults.map(item => <p className=\"search\" onClick={item => this.clickResult(item)}>\r\n                    {item.artist} -<span style={{display: \"none\"}}>,</span> {item.name}<div style={{display: \"none\"}}> -, {item.uri} -, {item.artwork}</div></p>)} \r\n                  </>\r\n                )}\r\n\r\n              </div>\r\n            </div>\r\n            </>\r\n          )}    \r\n        </header>\r\n        <br></br>\r\n        {this.state.token && !this.state.no_data && this.state.item && (\r\n            <>\r\n            <Player\r\n              item={this.state.item}\r\n              is_playing={this.state.is_playing}\r\n              progress_ms={this.state.progress_ms}\r\n            />\r\n            \r\n            <Queue \r\n              songQueue = {this.state.currentQueue}\r\n              />\r\n            <br></br>\r\n            </>\r\n          )}\r\n          {this.state.no_data && (\r\n            <>     \r\n            \r\n            <Queue \r\n              songQueue = {this.state.currentQueue}\r\n              />\r\n            <br></br>\r\n              \r\n            </>\r\n          )}\r\n          <div style={{ float:\"left\", clear: \"both\" }}\r\n               ref={(el) => { this.endPage = el; }}>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpotHouse;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport SpotHouse from './SpotHouse.js';\r\n\r\n/**\r\n * Main component, for the website and logo.\r\n */\r\nclass App extends Component {\r\n    render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"App-header\">\r\n          <h2>SpotHouse!</h2>\r\n        </div>\r\n        <div>\r\n            <SpotHouse/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}