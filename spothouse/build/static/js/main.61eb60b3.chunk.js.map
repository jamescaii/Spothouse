{"version":3,"sources":["Config.js","Queue.js","hash.js","TextBox.js","Player.js","SpotHouse.js","App.js","reportWebVitals.js","index.js"],"names":["scopes","Queue","props","clickedMap","useRef","userName","user","roomCode","handleUpvote","event","a","songName","target","id","found","action","isDown","num","i","current","length","name","downboolean","upboolean","push","console","log","toSend","toChange","isIncrease","rCode","numAdd","config","headers","axios","post","then","response","data","catch","error","handleDownvote","isUp","Clicked","getColorDown","fill","renderRemove","uri","isHost","align","Button","className","size","onClick","songUri","code","removeFromBackend","songQueue","border","table-layour","bordercolor","width","cellspacing","cellpadding","map","item","style","cellPadding","height","d","src","artwork","alt","fontSize","padding","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","TextBox","textInput","useState","textInp","setText","useEffect","force","label","type","value","onChange","e","handleChange","Player","progressBarStyles","progress_ms","duration_ms","album","images","url","artists","SpotHouse","retrieveBackendQueue","listUser","state","songqueue","setState","userList","addBackendQueue","orderedList","songs","userQuery","addToSpotifyQueue","token","toAdd","encodeURIComponent","trim","$","beforeSend","xhr","setRequestHeader","success","go","scrollToBottom","endPage","scrollIntoView","behavior","getUsersList","tempUsers","hostToken","inRoom","isCreated","is_playing","no_data","no_top_data","searchQuery","searchResults","artist","clickedSongURI","topTracks","count","added","numberQuery","usernameSet","getCurrentlyPlaying","bind","tick","param","this","_token","access_token","getTopTracks","interval","setInterval","clearInterval","shift","prevProps","prevState","searchQueryParameter","tracks","items","clickedArtist","currentTarget","textContent","clickedName","clickedURI","clickedArt","alert","joined","concat","val","username","Math","floor","random","hostName","randomCode","setUpRoom","delay","Promise","res","setTimeout","timeout","skipCurrentlyPlaying","query","guestName","cVal","href","join","changeUserQuery","visibility","onPress","createRoom","joinRoom","changeNumberQuery","textAlign","changeQuery","getSearch","clickResult","display","skipSong","float","clear","ref","el","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61eb60b3.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\nexport const clientId = \"41b5d9c762d04b6182549771690cf81c\";\nexport const redirectUri = \"https://spothouse-app.herokuapp.com/\";\n//export const redirectUri = \"http://localhost:3000/callback\";\nexport const scopes = [\n    \"user-top-read\",\n    \"user-read-currently-playing\",\n    \"user-read-playback-state\",\n    \"user-modify-playback-state\",\n];","import React, { useRef } from 'react';\nimport axios from 'axios';\nimport './Queue.css';\nimport Button from 'react-bootstrap/Button'\n\nconst Queue = props => {\n    const clickedMap = useRef([])\n    let userName = props.user\n    let roomCode = props.roomCode\n\n    const handleUpvote = async (event) => {\n        let songName = event.target.id\n        let found = false;\n        let action = false;\n        let isDown = false;\n        let num = 1;\n        for (let i = 0; i < clickedMap.current.length; i++) {\n            if (clickedMap.current[i].name === songName) {\n                isDown = clickedMap.current[i].downboolean\n                clickedMap.current[i].upboolean = !clickedMap.current[i].upboolean\n                action = clickedMap.current[i].upboolean\n                // switching\n                if (isDown) {\n                    clickedMap.current[i].downboolean = !clickedMap.current[i].downboolean\n                    num++\n                }\n                found = true\n            }\n        }\n        if (!found) {\n            clickedMap.current.push({name: songName, upboolean: true, downboolean: false})\n            action = true;\n            isDown = false;\n        }\n        console.log(num)\n        const toSend = {\n            toChange: songName,\n            isIncrease: action,\n            user: userName,\n            rCode: roomCode,\n            numAdd: num\n        }\n        let config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n        await axios.post(\n            \"/rankings\",\n            toSend,\n            config\n        )\n            .then(response => {\n                console.log(response.data[\"userList\"])\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n\n    \n    }\n    \n\n    const handleDownvote = async (event) => {\n        let songName = event.target.id\n        let found = false;\n        let action = false;\n        let isUp = false;\n        let num = 1;\n        for (let i = 0; i < clickedMap.current.length; i++) {\n            if (clickedMap.current[i].name === songName) {\n                isUp = clickedMap.current[i].upboolean\n                clickedMap.current[i].downboolean = !clickedMap.current[i].downboolean\n                action = !clickedMap.current[i].downboolean\n                console.log(action)\n                // switching\n                if (isUp) {\n                    clickedMap.current[i].upboolean = !clickedMap.current[i].upboolean\n                    num++\n                }\n                found = true\n            }\n        }\n        if (!found) {\n            clickedMap.current.push({name: songName, downboolean: true, upboolean: false})\n            action = false;\n            isUp = false;\n        }\n        console.log(num)\n        const toSend = {\n            toChange: songName,\n            isIncrease: action,\n            user: userName,\n            rCode: roomCode,\n            numAdd: num\n        }\n        let config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n        await axios.post(\n            \"/rankings\",\n            toSend,\n            config\n        )\n            .then(response => {\n                console.log(response.data[\"userList\"])\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n        \n\n    }\n    \n    function Clicked(songName, isUp) {        \n        for (let i = 0; i < clickedMap.current.length; i++) {\n            if (clickedMap.current[i].name === songName) {\n                //console.log(clickedMap.current[i].name, songName)\n                if (isUp)\n                    return clickedMap.current[i].upboolean\n                else\n                    return clickedMap.current[i].downboolean\n            }\n        }\n        return false\n    }\n\n    function getColorUp(songName) {\n        //console.log(songName)\n        if (!Clicked(songName, true)) {\n            //console.log(\"not clicked\")\n            return { fill: \"#687074\" }\n        }\n        else {            \n            //console.log(\"clicked\")\n            return { fill: \"#f48024\" }\n        }\n    }\n    \n    function getColorDown(songName) {\n        //console.log(songName)\n        if (!Clicked(songName, false)) {\n            //console.log(\"not clicked\")\n            return { fill: \"#687074\" }\n        }\n        else {            \n            //console.log(\"clicked\")\n            return { fill: \"#f48024\" }\n        }\n    }\n    function renderRemove(uri) {\n        if (props.isHost) {\n            return (\n            <td align=\"center\">\n                <Button className=\"btn btn--remove\" size=\"sm\" onClick={() => removeFromBackend(uri)}>\n                X\n                </Button>{' '}\n            </td>\n            );\n        }\n    }\n    function removeFromBackend(uri) {\n      const toSend = {\n        songUri: uri,\n        code: roomCode\n      }\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Access-Control-Allow-Origin': '*',\n        }\n      }\n      axios.post(\n          \"/remove\",\n          toSend,\n          config\n      )\n          .then(response => {\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n    }\n\n    return (\n        <div className=\"App\"><center>\n            <h2>Queue</h2>\n            <br></br>\n            {props.songQueue[0] && (\n                <table id=\"table\" className=\"queue\" border=\"1px\" table-layour=\"fixed\" bordercolor=\"black\" width=\"50%\"  cellspacing=\"0\" cellpadding=\"0\">\n                    <tbody>\n                    {props.songQueue.map(item =>\n                        <tr key={item.name}>\n                            {renderRemove(item.uri)}\n                            <td align=\"center\" style={{cellPadding: 0}}>\n                                <span className=\"voteup\" onClick={handleUpvote}>\n                                  <svg width=\"36\" height=\"36\" >\n                                    <path d=\"M2 26h32L18 10 2 26z\" style={getColorUp(item.name)} id={item.name} ></path>\n                                  </svg>\n                                </span>\n                                <span className=\"votedown\" onClick={handleDownvote}>\n                                  <svg width=\"36\" height=\"36\">\n                                    <path d=\"M2 10h32L18 26 2 10z\" style={getColorDown(item.name)} id={item.name}></path>\n                                  </svg>\n                                </span>\n                            </td>\n                            <td align=\"center\"><img src={item.artwork} width=\"50\" align=\"center\" alt=\"album art\"/></td>\n                            <td align=\"center\" className=\"absorbing-column\" style={{fontSize: 13, padding: 10}}>{item.name}</td>\n                        </tr>\n                    )\n                    }\n                    </tbody>\n                </table>\n            )}\n        </center>\n            <br></br>\n        </div>\n    );\n}\n\nexport default Queue;","// Get the hash of the url\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\nexport default hash;","import React, {useEffect, useRef, useState} from 'react';\nimport './App.css';\nimport './App.js';\n\n/**\n * A functional component representing a TextBox\n * @param props = the inputted props from the parent\n * @return the TextBox element\n */\nfunction TextBox(props) {\n    const textInput = useRef(0);\n    const [textInp, setText] = useState(0);\n\n    /**\n     * handleChange.\n     * Changes our variables information on the box to the user text\n     * @param props = the inputted props from the parent\n     * @param event = the text of the user\n     */\n    function handleChange(props, event) {\n        props.onChange(event.target.value)\n    }\n\n    /**\n     * useEffect (for nearest clicking).\n     * Forcibly changes the text of the box to the user click\n     */\n    useEffect(() => {\n        textInput.current = props.force\n        setText(props.force)\n    }, [props.force]);\n\n  return (\n    <div className=\"TextBox\">\n      <div style={{fontSize:\"large\"}}>{props.label}</div>\n      <input \n        type={'text'}\n        value={textInp}\n        onChange={(e) => handleChange(props, e)}\n      />\n    </div>\n  );\n}\n\nexport default TextBox;\n","import React from \"react\";\nimport \"./Player.css\";\n\nconst Player = props => {\n\n  const progressBarStyles = {\n    width: (props.progress_ms * 100 / props.item.duration_ms) + '%'\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"main-wrapper\">\n        <div className=\"now-playing__img\">\n          <img src={props.item.album.images[0].url} alt=\"album art\"/>\n        </div>\n        <div className=\"now-playing__side\">\n          <div className=\"now-playing__name\">{props.item.name}</div>\n          <div className=\"now-playing__artist\">\n            {props.item.artists[0].name}\n          </div>\n          <div className=\"progress\">\n            <div className=\"progress__bar\" style={progressBarStyles} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Player;","import React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./Config\";\nimport { AwesomeButton } from \"react-awesome-button\";\nimport Queue from \"./Queue\"\nimport hash from \"./hash\";\nimport \"./App.css\";\nimport TextBox from './TextBox';\nimport Player from './Player';\nimport axios from \"axios\";\n\n\nclass SpotHouse extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      hostToken: null,\n      inRoom: false,\n      isCreated: false,\n      item: {\n        album: {\n          images: [{ url: \"\" }]\n        },\n        name: \"\",\n        artists: [{ name: \"\" }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0,\n      no_data: false,\n      no_top_data: false,\n      searchQuery: \"\",\n      searchResults: [\n        {\n          name: \"\",\n          artist: \"\",\n          uri: \"\",\n          artwork: \"\",\n        }\n      ],\n      clickedSongURI: \"\",\n      topTracks: [],\n      count: 0,\n      added: false,\n      code: 0,\n      numberQuery: \"\",\n      userQuery: \"\",\n      userList: [],\n      usernameSet: false,\n      go: false,\n    };\n\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n    this.tick = this.tick.bind(this);\n  }\n\n  changeQuery(param) {\n    this.setState({ searchQuery: param })\n  }\n\n  changeNumberQuery(param) {\n    this.setState({ numberQuery: param })\n  }\n\n  changeUserQuery(param) {\n    this.setState({ userQuery: param })\n  }\n\n  componentDidMount() {\n    window.songqueue = []\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n      this.getTopTracks(_token);\n    }\n\n    // set interval for polling every .5 seconds\n    this.interval = setInterval(() => this.tick(), 250);\n  }\n\n  componentWillUnmount() {\n    // clear the interval to save resources\n    clearInterval(this.interval);\n  }\n\n\n\n  async tick() {\n    if (this.state.token) {\n      if (this.state.inRoom) {\n        this.getCurrentlyPlaying(this.state.hostToken);\n        this.retrieveBackendQueue();\n        this.getUsersList();\n        if (this.state.progress_ms / this.state.item.duration_ms > .95 & !this.state.added) {\n          this.setState({ added: true })\n          console.log(\"almost done\")\n          if (window.songqueue.length > 0) {\n            let songUri = window.songqueue.shift().uri;\n            this.removeFromBackend(songUri)    \n            this.retrieveBackendQueue();\n            if (this.state.isCreated) {\n              this.addToSpotifyQueue(this.state.token, songUri);   \n            }\n  \n          }\n        }\n      }\n    }\n  }\n  \n  retrieveBackendQueue = () => {\n    let listUser = []\n    const toSend = {\n      roomCode: this.state.code\n    }\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      }\n    }\n    axios.post(\n        \"/getBackQueue\",\n        toSend,\n        config\n    )\n        .then(response => {\n          window.songqueue = response.data[\"songList\"]\n          listUser = response.data[\"userList\"]\n          this.setState({userList: listUser})\n          //console.log(this.state.userList)\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n  }\n\n\n  addBackendQueue = () => {\n    let orderedList = []\n    const toSend = {\n      songs: window.songqueue,\n      roomCode: this.state.code,\n      user: this.state.userQuery\n    }\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      }\n    }\n    axios.post(\n        \"/add\",\n        toSend,\n        config\n    )\n        .then(response => {\n          orderedList = response.data[\"songList\"]\n          window.songqueue = orderedList\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n  }\n\n  addToSpotifyQueue = async (token, songUri) => {\n    let toAdd = encodeURIComponent(songUri.trim())\n    // Make a call using the token\n    await $.ajax({\n      url: \"https://api.spotify.com/v1/me/player/queue?uri=\" + toAdd,\n      type: \"POST\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        this.setState({go: true})\n      }\n    });\n  }\n\n  removeFromBackend = (token) => {\n    const toSend = {\n      songUri: token,\n      code: this.state.code\n    }\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      }\n    }\n    axios.post(\n        \"/remove\",\n        toSend,\n        config\n    )\n        .then(response => {\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n  }\n\n  scrollToBottom = () => {\n    this.endPage.scrollIntoView({ behavior: \"smooth\" });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.count !== this.state.count)\n      //this.scrollToBottom();\n    if (prevState.item.name !== this.state.item.name)\n      this.setState({ added: false })\n  }\n  getSearch(token, searchQuery) {\n    // parse searchQuery\n    let searchQueryParameter = encodeURIComponent(searchQuery.trim())\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/search?q=\" + searchQueryParameter + \"&type=track&limit=10\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        // Checks if the data is not empty\n        if (data) {\n          this.setState({\n            searchResults: data.tracks.items.map((item) => ({\n              name: item.name,\n              artist: item.artists[0].name,\n              uri: item.uri,\n              artwork: item.album.images[0].url\n            }\n            )\n            )\n          });\n          return;\n        }\n\n        this.setState({\n          item: data.item,\n        });\n      }\n    });\n\n  }\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        // Checks if the data is not empty\n        if (!data) {\n          this.setState({\n            no_data: true,\n          });\n          return;\n        }\n\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms,\n          no_data: false /* We need to \"reset\" the boolean, in case the\n                            user does not give F5 and has opened his Spotify. */\n        });\n      }\n    });\n  }\n\n  getTopTracks(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/top/tracks?time_range=short_term&limit=10\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        // Checks if the data is not empty\n        if (!data) {\n          this.setState({\n            no_top_data: true,\n          });\n          return;\n        }\n        this.setState({\n          topTracks: data.items.map((item) => ({\n            name: item.name,\n            artist: item.artists[0].name,\n            uri: item.uri,\n            artwork: item.album.images[0].url\n          }\n          ))\n        });\n      }\n    });\n  }\n\n  clickResult(e) {\n    let clickedArtist = e.currentTarget.textContent.split(\" -, \")[0]\n    let clickedName = e.currentTarget.textContent.split(\" -, \")[1]\n    let clickedURI = e.currentTarget.textContent.split(\" -, \")[2]\n    let clickedArt = e.currentTarget.textContent.split(\" -, \")[3]\n    let found = false\n    for (let i = 0; i < window.songqueue.length; i++) {\n      if (window.songqueue[i].uri === clickedURI) {\n        found = true\n        alert(\"song already added!\")\n        break\n      }\n    }\n    if (!found) {\n      this.setState({ clickedSongURI: clickedURI })\n      var joined = window.songqueue.concat({\n        name: clickedName,\n        artist: clickedArtist,\n        artwork: clickedArt,\n        uri: clickedURI,\n      });\n      if (joined) {\n        window.songqueue = joined\n        this.addBackendQueue()\n      }\n\n      this.setState({ count: this.state.count + 1 })\n      console.log(\"added!\")\n\n    }\n  }\n\n  getUsersList = () => {\n    let tempUsers = []\n    const toSend = {\n      roomCode: this.state.code\n    }\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      }\n    }\n    axios.post(\n        \"/users\",\n        toSend,\n        config\n    )\n        .then(response => {\n          tempUsers = response.data[\"userList\"]\n          this.setState({userList: tempUsers})\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n  }\n\n  setUpRoom(val) {\n    let username = this.state.userQuery.trim()\n    if (username === \"\") {      \n      let randomCode = Math.floor(10000 + Math.random() * (99999 - 10000));\n      username = \"host#\" + randomCode\n      this.setState({userQuery: username})\n    }\n    const toSend = {\n      roomCode: val,\n      hostName: username,\n      hostToken: this.state.token\n    }\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      }\n    }\n    axios.post(\n        \"/setup\",\n        toSend,\n        config\n    )\n        .then(response => {\n          //console.log(\"USERLIST\", response.data[\"userList\"])\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n  }\n\n  createRoom() {\n    let randomCode = Math.floor(10000 + Math.random() * (99999 - 10000));\n    this.setState({code: randomCode})\n    this.setState({isCreated: true})\n    this.setState({inRoom: true})\n    this.setState({hostToken: this.state.token})\n    this.setUpRoom(randomCode)\n  }\n  timeout(delay) {\n    return new Promise( res => setTimeout(res, delay) );\n  }\n  async skipSong() {\n    if (window.songqueue.length > 0 && this.state.isCreated) {\n      let songUri = window.songqueue.shift().uri;\n      this.addToSpotifyQueue(this.state.token, songUri)\n      this.removeFromBackend(songUri)\n      await this.timeout(500); // .5s delay\n      if (this.state.go) this.skipCurrentlyPlaying(this.state.token)\n      this.setState({go: false})\n    }\n  }\n\n  async skipCurrentlyPlaying(token) {\n    // Make a call using the token\n    await $.ajax({\n      url: \"https://api.spotify.com/v1/me/player/next\",\n      type: \"POST\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n      }\n    });\n\n  }\n\n  joinRoom(numberQuery) {\n    let orderedList = []\n    let username = this.state.userQuery.trim()\n    if (username === \"\") {      \n      let randomCode = Math.floor(10000 + Math.random() * (99999 - 10000));\n      username = \"guest#\" + randomCode\n      this.setState({userQuery: username})\n    }\n    const toSend = {\n      query: numberQuery,\n      guestName: username\n    }\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*',\n      }\n    }\n    axios.post(\n        \"/join\",\n        toSend,\n        config\n    )\n        .then(response => {\n          console.log(\"USERLIST\", response.data[\"userList\"])\n          orderedList = response.data[\"backendSongs\"]\n          this.setState({hostToken: response.data[\"hostToken\"]})\n          let cVal = response.data[\"code\"]\n          this.setState({code: cVal})\n          window.songqueue = orderedList\n          this.setState({isCreated: false})\n          this.setState({inRoom: true})\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n  }\n\n  render() {\n    return (\n      <>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {!this.state.token && !this.state.inRoom && !this.state.usernameSet && (\n            <a\n              className=\"btn btn--loginApp-link\"\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                \"%20\"\n              )}&response_type=token&show_dialog=true`}\n            >\n              Login to Spotify\n            </a>\n          )}\n          \n          {this.state.token && !this.state.inRoom && !this.state.usernameSet && (\n            <>\n                \n              <TextBox label=\"Enter Username:\" force={this.state.userQuery} onChange={this.changeUserQuery.bind(this)} />\n              <hr style={{ height: 10, visibility: \"hidden\" }} />\n              <AwesomeButton type=\"primary\" className=\"btn btn--search\" onPress={() => {\n                this.setState({usernameSet: true})\n              }}>Submit Username</AwesomeButton>\n              <br></br>\n              <p style={{fontSize: \"small\"}}>(leave blank for random name)</p>\n              <br></br>\n          </>\n          )}\n          {this.state.token && !this.state.inRoom && this.state.usernameSet && (\n            <>\n\n              <AwesomeButton type=\"primary\" className=\"btn btn--search\" onPress={() => { this.createRoom() }}>Create Room</AwesomeButton>\n              <br></br>\n                <AwesomeButton type=\"primary\" className=\"btn btn--search\" onPress={() => {\n                  this.joinRoom(this.state.numberQuery)\n                }}>Join Room</AwesomeButton>\n                <hr style={{ height: 10, visibility: \"hidden\" }} />\n                <TextBox label=\"\" style={{fontSize: \"large\"}} force={this.state.numberQuery} onChange={this.changeNumberQuery.bind(this)} />\n              <br></br>\n            </>\n          )\n          }\n            {this.state.token && this.state.inRoom && this.state.isCreated && (\n              <>\n                <div className=\"row\">\n                  <div className=\"widercolumn\">\n                    <h3 className=\"roomcode\" style={{fontSize: \"large\"}}>Room Code: {this.state.code} </h3>\n                    <br></br>\n                    <h3 className=\"username\" style={{fontSize: \"large\"}}>{this.state.userQuery} </h3>\n                    <br></br>\n                  </div>\n                  <div className=\"widercolumn\">\n                    <h3 className=\"userslist\" style={{fontSize: \"large\", textAlign: \"right\"}}>\n                    Users List:</h3>\n                    {this.state.userList.map(item => <p className=\"userslist\" style={{fontSize: \"large\"}}>{item.username}</p>)}\n                  </div>\n                </div>\n                <br></br>\n                <TextBox label=\"Search for a song:\" force={this.state.searchQuery} onChange={this.changeQuery.bind(this)} />\n                <hr style={{ height: 10, visibility: \"hidden\" }} />\n                <AwesomeButton type=\"primary\" className=\"btn btn--search\" onPress={() => {\n                  this.getSearch(this.state.token, this.state.searchQuery)\n                }}>Submit</AwesomeButton>\n                <br></br>\n                <p style={{ fontSize: \"small\" }}>Click on a song to add it to the queue! (duplicates not allowed)</p>\n                <br></br>\n                <div className=\"row\">\n                  <div className=\"column\">\n                    {this.state.token && !this.state.no_top_data && (\n                      <>\n                        <h4>Your top tracks:</h4>\n                        <br></br>\n                        <table className=\"tablebtn\" border=\"1px\" table-layour=\"fixed\" bordercolor=\"black\">\n                          <tbody>\n                          {this.state.topTracks.map(item =>\n                            <tr id=\"tableresult\" className=\"trbtn\" key={item.name} onClick={item => this.clickResult(item)}><p className=\"search\">\n                            {item.artist} -<span style={{ display: \"none\" }}>,</span> {item.name}<div style={{ display: \"none\" }}> -, {item.uri} -, {item.artwork}</div></p>\n                              </tr>)}\n\n                          </tbody>\n                        </table>\n                        <br></br>\n                      </>\n                    )}\n                  </div>\n                  <div className=\"column\">\n                    <hr width=\"300\" style={{ visibility: \"hidden\" }} />\n                    {this.state.searchResults[0].name && (\n                      <>\n                        <h4>Search results:</h4>\n                        <br></br>\n                        <table className=\"tablebtn\" border=\"1px\" table-layour=\"fixed\" bordercolor=\"black\">\n                          <tbody>\n                            {this.state.searchResults.map(item => <tr id=\"tableresult\" className=\"trbtn\" key={item.name}><p className=\"search\" onClick={item => this.clickResult(item)}>\n                              {item.artist} -<span style={{ display: \"none\" }}>,</span> {item.name}<div style={{ display: \"none\" }}> -, {item.uri} -, {item.artwork}</div></p></tr>)}\n\n                          </tbody>\n                        </table>\n                      </>\n                    )}\n                  </div>\n                </div>\n              </>\n            )\n            }    \n            \n            {this.state.token && this.state.inRoom && !this.state.isCreated && (\n              <>\n                <div className=\"row\">\n                  <div className=\"widercolumn\">\n                    <h3 className=\"roomcode\" style={{fontSize: \"large\"}}>Room Code: {this.state.code} </h3>\n                    <br></br>\n                    <h3 className=\"username\" style={{fontSize: \"large\"}}>{this.state.userQuery} </h3>\n                    <br></br>\n                  </div>\n                  <div className=\"widercolumn\">\n                    <h3 className=\"userslist\" style={{fontSize: \"large\", textAlign: \"right\"}}>\n                    Users List:</h3>\n                    {this.state.userList.map(item => <p className=\"userslist\" style={{fontSize: \"large\"}}>{item.username}</p>)}\n                  </div>\n                </div>\n                <br></br>\n                <TextBox label=\"Search for a song:\" force={this.state.searchQuery} onChange={this.changeQuery.bind(this)} />\n                <hr style={{ height: 10, visibility: \"hidden\" }} />\n                <AwesomeButton type=\"primary\" className=\"btn btn--search\" onPress={() => {\n                  this.getSearch(this.state.token, this.state.searchQuery)\n                }}>Submit</AwesomeButton>\n                <br></br>\n                <p style={{ fontSize: \"small\" }}>Click on a song to add it to the queue! (duplicates not allowed)</p>\n                <br></br>\n                <div className=\"row\">\n                  <div className=\"column\">\n                    {this.state.token && !this.state.no_top_data && (\n                      <>\n                        <h4>Your top tracks:</h4>\n                        <br></br>\n                        <table className=\"tablebtn\" border=\"1px\" table-layour=\"fixed\" bordercolor=\"black\">\n                          <tbody>\n                          {this.state.topTracks.map(item =>\n                            <tr id=\"tableresult\" className=\"trbtn\" key={item.name} onClick={item => this.clickResult(item)}><p className=\"search\">\n                            {item.artist} -<span style={{ display: \"none\" }}>,</span> {item.name}<div style={{ display: \"none\" }}> -, {item.uri} -, {item.artwork}</div></p>\n                              </tr>)}\n\n                          </tbody>\n                        </table>\n                        <br></br>\n                      </>\n                    )}\n                  </div>\n                  <div className=\"column\">\n                    <hr width=\"300\" style={{ visibility: \"hidden\" }} />\n                    {this.state.searchResults[0].name && (\n                      <>\n                        <h4>Search results:</h4>\n                        <br></br>\n                        <table className=\"tablebtn\" border=\"1px\" table-layour=\"fixed\" bordercolor=\"black\">\n                          <tbody>\n                            {this.state.searchResults.map(item => <tr id=\"tableresult\" className=\"trbtn\" key={item.name}><p className=\"search\" onClick={item => this.clickResult(item)}>\n                              {item.artist} -<span style={{ display: \"none\" }}>,</span> {item.name}<div style={{ display: \"none\" }}> -, {item.uri} -, {item.artwork}</div></p></tr>)}\n\n                          </tbody>\n                        </table>\n                      </>\n                    )}\n                  </div>\n                </div>\n              </>\n            )\n            }    \n        </header>\n        <br></br>\n        {this.state.token && !this.state.no_data && this.state.item && this.state.inRoom && (\n          <>\n            <Player\n              item={this.state.item}\n              is_playing={this.state.is_playing}\n              progress_ms={this.state.progress_ms}\n            />\n              {this.state.isCreated && (\n                <>\n                <AwesomeButton type=\"primary\" className=\"btn btn--skip\" onPress={() => {\n                  this.skipSong()\n                }}>≫</AwesomeButton>\n                <br></br>\n                <br></br>\n              </>\n              )}\n            <Queue\n              songQueue={window.songqueue}\n              roomCode={this.state.code}\n              user={this.state.userQuery}\n              isHost={this.state.isCreated}\n            />\n            <br></br>\n          </>\n        )}\n        {this.state.no_data && this.state.inRoom && (\n          <>\n\n            <Queue\n              songQueue={window.songqueue}\n              roomCode={this.state.code}\n              user={this.state.userQuery}\n              isHost={this.state.isCreated}\n            />\n            <br></br>\n\n          </>\n        )}\n        <div style={{ float: \"left\", clear: \"both\" }}\n          ref={(el) => { this.endPage = el; }}>\n        </div>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default SpotHouse;","import React, { Component } from 'react';\nimport './App.css';\nimport SpotHouse from './SpotHouse.js';\n\n/**\n * Main component, for the website and logo.\n */\nclass App extends Component {\n    render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <br></br>\n          <h2>SpotHouse!</h2>\n          <br></br>\n        </div>\n        <div>\n            <SpotHouse/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}